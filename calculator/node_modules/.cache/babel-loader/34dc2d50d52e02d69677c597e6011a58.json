{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst initialState = {\n  ratesList: [],\n  addedRates: [],\n  totalPrice: 0,\n  status: null,\n  error: null,\n  discount: false,\n  discountAmount: 0\n};\nexport const fetchRates = createAsyncThunk(\"rates/fetchRates\", async function (_, _ref) {\n  let {\n    rejectWithValue\n  } = _ref;\n\n  try {\n    const response = axios.get(`http://localhost:3008/rates`);\n\n    if (response.ok) {\n      throw new Error(\"Server Error!\");\n    }\n\n    const data = await response;\n    return data.data;\n  } catch (error) {\n    return rejectWithValue(error.message);\n  }\n});\n\nconst checkIfCategoryExistsInState = data => {\n  var _state$addedRates;\n\n  return (_state$addedRates = state.addedRates) === null || _state$addedRates === void 0 ? void 0 : _state$addedRates.filter(rate => rate.category_name === data.category_name).map(rate => rate.id);\n};\n\nexport const ratesSlice = createSlice({\n  name: \"rates\",\n  initialState,\n  reducers: {\n    addRates: (state, _ref2) => {\n      var _state$addedRates2;\n\n      let {\n        payload\n      } = _ref2;\n\n      /*const existingCategoryId = state.addedRates?.map((rate) => {\n        if (rate.category_name === payload.category_name) {\n          return rate.id;\n        }\n        return -1;\n      }); */\n      const existingCategoryId = (_state$addedRates2 = state.addedRates) === null || _state$addedRates2 === void 0 ? void 0 : _state$addedRates2.filter(rate => rate.category_name === payload.category_name).map(rate => rate.id);\n      const exist = state.addedRates.some(rate => rate.category_name === payload.category_name && rate.category_name !== \"social\" && rate.category_name !== \"messenger\");\n\n      if (exist) {\n        //state.addedRates.splice(existingCategoryId, 1, payload);\n        state.addedRates[state.addedRates.findIndex(el => el.category_name === payload.category_name || el.id === payload.id)] = payload;\n      }\n\n      if (!exist) {\n        state.addedRates.push(payload);\n      }\n    },\n\n    updateAddedRates(state, _ref3) {\n      let {\n        payload\n      } = _ref3;\n      state.addedRates[state.addedRates.findIndex(el => el.id === payload.id)] = payload;\n    },\n\n    removeSelectedCheckbox(state, _ref4) {\n      let {\n        payload\n      } = _ref4;\n      state.addedRates = state.addedRates.filter(rate => rate.id !== payload);\n    },\n\n    calculateTotalPrice: state => {\n      var _state$addedRates3;\n\n      const discount = (_state$addedRates3 = state.addedRates) === null || _state$addedRates3 === void 0 ? void 0 : _state$addedRates3.some(rate => rate.category_name === \"internet\");\n      state.discount = discount;\n\n      if (state.addedRates.length === 0) {\n        state.totalPrice = 0;\n      }\n\n      if (state.addedRates.length === 1) {\n        var _state$addedRates$;\n\n        state.totalPrice = (_state$addedRates$ = state.addedRates[0]) === null || _state$addedRates$ === void 0 ? void 0 : _state$addedRates$.price;\n      }\n\n      if (state.addedRates.length >= 2) {\n        var _state$addedRates4;\n\n        let sum = (_state$addedRates4 = state.addedRates) === null || _state$addedRates4 === void 0 ? void 0 : _state$addedRates4.map(item => item === null || item === void 0 ? void 0 : item.price).reduce((acc, curr) => acc + curr);\n        let discAmount;\n\n        if (discount) {\n          var _state$addedRates5, _state$addedRates5$fi;\n\n          const discAmountCheck = (_state$addedRates5 = state.addedRates) === null || _state$addedRates5 === void 0 ? void 0 : (_state$addedRates5$fi = _state$addedRates5.filter(rate => rate.category_name === \"social\")) === null || _state$addedRates5$fi === void 0 ? void 0 : _state$addedRates5$fi.map(rate => rate === null || rate === void 0 ? void 0 : rate.price);\n          discAmount = discAmountCheck.length >= 2 ? discAmountCheck === null || discAmountCheck === void 0 ? void 0 : discAmountCheck.reduce((acc, curr) => acc + curr, 0) : discAmountCheck[0];\n          const newSumWithDiscount = sum - discAmount;\n          state.discountAmount = discAmount;\n          state.totalPrice = newSumWithDiscount;\n        }\n\n        state.totalPrice = sum;\n      }\n    }\n  },\n  extraReducers: {\n    [fetchRates.pending]: (state, action) => {\n      state.status = \"loading\";\n      state.error = null;\n    },\n    [fetchRates.fulfilled]: (state, action) => {\n      state.status = \"resolved\";\n      state.ratesList = action.payload;\n    },\n    [fetchRates.rejected]: (state, action) => {\n      state.status = \"rejected\";\n      state.error = action.payload;\n    }\n  }\n});\nexport const {\n  addRates,\n  calculateTotalPrice,\n  removeSelectedCheckbox\n} = ratesSlice.actions;\nexport default ratesSlice.reducer;","map":{"version":3,"sources":["/Users/anastasiaviva/projects/for-git/rates/calculator/src/store/slices/ratesSlice.js"],"names":["createSlice","createAsyncThunk","axios","initialState","ratesList","addedRates","totalPrice","status","error","discount","discountAmount","fetchRates","_","rejectWithValue","response","get","ok","Error","data","message","checkIfCategoryExistsInState","state","filter","rate","category_name","map","id","ratesSlice","name","reducers","addRates","payload","existingCategoryId","exist","some","findIndex","el","push","updateAddedRates","removeSelectedCheckbox","calculateTotalPrice","length","price","sum","item","reduce","acc","curr","discAmount","discAmountCheck","newSumWithDiscount","extraReducers","pending","action","fulfilled","rejected","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAE,EADQ;AAEnBC,EAAAA,UAAU,EAAE,EAFO;AAGnBC,EAAAA,UAAU,EAAE,CAHO;AAInBC,EAAAA,MAAM,EAAE,IAJW;AAKnBC,EAAAA,KAAK,EAAE,IALY;AAMnBC,EAAAA,QAAQ,EAAE,KANS;AAOnBC,EAAAA,cAAc,EAAE;AAPG,CAArB;AAUA,OAAO,MAAMC,UAAU,GAAGV,gBAAgB,CACxC,kBADwC,EAExC,gBAAgBW,CAAhB,QAAwC;AAAA,MAArB;AAAEC,IAAAA;AAAF,GAAqB;;AACtC,MAAI;AACF,UAAMC,QAAQ,GAAGZ,KAAK,CAACa,GAAN,CAAW,6BAAX,CAAjB;;AAEA,QAAID,QAAQ,CAACE,EAAb,EAAiB;AACf,YAAM,IAAIC,KAAJ,CAAU,eAAV,CAAN;AACD;;AAED,UAAMC,IAAI,GAAG,MAAMJ,QAAnB;AACA,WAAOI,IAAI,CAACA,IAAZ;AACD,GATD,CASE,OAAOV,KAAP,EAAc;AACd,WAAOK,eAAe,CAACL,KAAK,CAACW,OAAP,CAAtB;AACD;AACF,CAfuC,CAAnC;;AAkBP,MAAMC,4BAA4B,GAAIF,IAAD,IAAU;AAAA;;AAC7C,8BAAOG,KAAK,CAAChB,UAAb,sDAAO,kBACHiB,MADG,CACKC,IAAD,IAAUA,IAAI,CAACC,aAAL,KAAuBN,IAAI,CAACM,aAD1C,EAEJC,GAFI,CAECF,IAAD,IAAUA,IAAI,CAACG,EAFf,CAAP;AAGD,CAJD;;AAMA,OAAO,MAAMC,UAAU,GAAG3B,WAAW,CAAC;AACpC4B,EAAAA,IAAI,EAAE,OAD8B;AAEpCzB,EAAAA,YAFoC;AAGpC0B,EAAAA,QAAQ,EAAE;AACRC,IAAAA,QAAQ,EAAE,CAACT,KAAD,YAAwB;AAAA;;AAAA,UAAhB;AAAEU,QAAAA;AAAF,OAAgB;;AAChC;AACN;AACA;AACA;AACA;AACA;AACM,YAAMC,kBAAkB,yBAAGX,KAAK,CAAChB,UAAT,uDAAG,mBACvBiB,MADuB,CACfC,IAAD,IAAUA,IAAI,CAACC,aAAL,KAAuBO,OAAO,CAACP,aADzB,EAExBC,GAFwB,CAEnBF,IAAD,IAAUA,IAAI,CAACG,EAFK,CAA3B;AAIA,YAAMO,KAAK,GAAGZ,KAAK,CAAChB,UAAN,CAAiB6B,IAAjB,CACXX,IAAD,IACEA,IAAI,CAACC,aAAL,KAAuBO,OAAO,CAACP,aAA/B,IACAD,IAAI,CAACC,aAAL,KAAuB,QADvB,IAEAD,IAAI,CAACC,aAAL,KAAuB,WAJb,CAAd;;AAOA,UAAIS,KAAJ,EAAW;AACT;AAEAZ,QAAAA,KAAK,CAAChB,UAAN,CACEgB,KAAK,CAAChB,UAAN,CAAiB8B,SAAjB,CACGC,EAAD,IACEA,EAAE,CAACZ,aAAH,KAAqBO,OAAO,CAACP,aAA7B,IAA8CY,EAAE,CAACV,EAAH,KAAUK,OAAO,CAACL,EAFpE,CADF,IAKIK,OALJ;AAMD;;AAED,UAAI,CAACE,KAAL,EAAY;AACVZ,QAAAA,KAAK,CAAChB,UAAN,CAAiBgC,IAAjB,CAAsBN,OAAtB;AACD;AACF,KAjCO;;AAkCRO,IAAAA,gBAAgB,CAACjB,KAAD,SAAqB;AAAA,UAAb;AAAEU,QAAAA;AAAF,OAAa;AACnCV,MAAAA,KAAK,CAAChB,UAAN,CACEgB,KAAK,CAAChB,UAAN,CAAiB8B,SAAjB,CAA4BC,EAAD,IAAQA,EAAE,CAACV,EAAH,KAAUK,OAAO,CAACL,EAArD,CADF,IAEIK,OAFJ;AAGD,KAtCO;;AAuCRQ,IAAAA,sBAAsB,CAAClB,KAAD,SAAqB;AAAA,UAAb;AAAEU,QAAAA;AAAF,OAAa;AACzCV,MAAAA,KAAK,CAAChB,UAAN,GAAmBgB,KAAK,CAAChB,UAAN,CAAiBiB,MAAjB,CAAyBC,IAAD,IAAUA,IAAI,CAACG,EAAL,KAAYK,OAA9C,CAAnB;AACD,KAzCO;;AA0CRS,IAAAA,mBAAmB,EAAGnB,KAAD,IAAW;AAAA;;AAC9B,YAAMZ,QAAQ,yBAAGY,KAAK,CAAChB,UAAT,uDAAG,mBAAkB6B,IAAlB,CACdX,IAAD,IAAUA,IAAI,CAACC,aAAL,KAAuB,UADlB,CAAjB;AAIAH,MAAAA,KAAK,CAACZ,QAAN,GAAiBA,QAAjB;;AAEA,UAAIY,KAAK,CAAChB,UAAN,CAAiBoC,MAAjB,KAA4B,CAAhC,EAAmC;AACjCpB,QAAAA,KAAK,CAACf,UAAN,GAAmB,CAAnB;AACD;;AACD,UAAIe,KAAK,CAAChB,UAAN,CAAiBoC,MAAjB,KAA4B,CAAhC,EAAmC;AAAA;;AACjCpB,QAAAA,KAAK,CAACf,UAAN,yBAAmBe,KAAK,CAAChB,UAAN,CAAiB,CAAjB,CAAnB,uDAAmB,mBAAqBqC,KAAxC;AACD;;AAED,UAAIrB,KAAK,CAAChB,UAAN,CAAiBoC,MAAjB,IAA2B,CAA/B,EAAkC;AAAA;;AAChC,YAAIE,GAAG,yBAAGtB,KAAK,CAAChB,UAAT,uDAAG,mBACNoB,GADM,CACDmB,IAAD,IAAUA,IAAV,aAAUA,IAAV,uBAAUA,IAAI,CAAEF,KADd,EAEPG,MAFO,CAEA,CAACC,GAAD,EAAMC,IAAN,KAAeD,GAAG,GAAGC,IAFrB,CAAV;AAIA,YAAIC,UAAJ;;AAEA,YAAIvC,QAAJ,EAAc;AAAA;;AACZ,gBAAMwC,eAAe,yBAAG5B,KAAK,CAAChB,UAAT,gFAAG,mBACpBiB,MADoB,CACZC,IAAD,IAAUA,IAAI,CAACC,aAAL,KAAuB,QADpB,CAAH,0DAAG,sBAEpBC,GAFoB,CAEfF,IAAD,IAAUA,IAAV,aAAUA,IAAV,uBAAUA,IAAI,CAAEmB,KAFA,CAAxB;AAIAM,UAAAA,UAAU,GACRC,eAAe,CAACR,MAAhB,IAA0B,CAA1B,GACIQ,eADJ,aACIA,eADJ,uBACIA,eAAe,CAAEJ,MAAjB,CAAwB,CAACC,GAAD,EAAMC,IAAN,KAAeD,GAAG,GAAGC,IAA7C,EAAmD,CAAnD,CADJ,GAEIE,eAAe,CAAC,CAAD,CAHrB;AAKA,gBAAMC,kBAAkB,GAAGP,GAAG,GAAGK,UAAjC;AACA3B,UAAAA,KAAK,CAACX,cAAN,GAAuBsC,UAAvB;AACA3B,UAAAA,KAAK,CAACf,UAAN,GAAmB4C,kBAAnB;AACD;;AACD7B,QAAAA,KAAK,CAACf,UAAN,GAAmBqC,GAAnB;AACD;AACF;AA/EO,GAH0B;AAoFpCQ,EAAAA,aAAa,EAAE;AACb,KAACxC,UAAU,CAACyC,OAAZ,GAAsB,CAAC/B,KAAD,EAAQgC,MAAR,KAAmB;AACvChC,MAAAA,KAAK,CAACd,MAAN,GAAe,SAAf;AACAc,MAAAA,KAAK,CAACb,KAAN,GAAc,IAAd;AACD,KAJY;AAKb,KAACG,UAAU,CAAC2C,SAAZ,GAAwB,CAACjC,KAAD,EAAQgC,MAAR,KAAmB;AACzChC,MAAAA,KAAK,CAACd,MAAN,GAAe,UAAf;AACAc,MAAAA,KAAK,CAACjB,SAAN,GAAkBiD,MAAM,CAACtB,OAAzB;AACD,KARY;AASb,KAACpB,UAAU,CAAC4C,QAAZ,GAAuB,CAAClC,KAAD,EAAQgC,MAAR,KAAmB;AACxChC,MAAAA,KAAK,CAACd,MAAN,GAAe,UAAf;AACAc,MAAAA,KAAK,CAACb,KAAN,GAAc6C,MAAM,CAACtB,OAArB;AACD;AAZY;AApFqB,CAAD,CAA9B;AAoGP,OAAO,MAAM;AAAED,EAAAA,QAAF;AAAYU,EAAAA,mBAAZ;AAAiCD,EAAAA;AAAjC,IACXZ,UAAU,CAAC6B,OADN;AAGP,eAAe7B,UAAU,CAAC8B,OAA1B","sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nconst initialState = {\n  ratesList: [],\n  addedRates: [],\n  totalPrice: 0,\n  status: null,\n  error: null,\n  discount: false,\n  discountAmount: 0,\n};\n\nexport const fetchRates = createAsyncThunk(\n  \"rates/fetchRates\",\n  async function (_, { rejectWithValue }) {\n    try {\n      const response = axios.get(`http://localhost:3008/rates`);\n\n      if (response.ok) {\n        throw new Error(\"Server Error!\");\n      }\n\n      const data = await response;\n      return data.data;\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  }\n);\n\nconst checkIfCategoryExistsInState = (data) => {\n  return state.addedRates\n    ?.filter((rate) => rate.category_name === data.category_name)\n    .map((rate) => rate.id);\n};\n\nexport const ratesSlice = createSlice({\n  name: \"rates\",\n  initialState,\n  reducers: {\n    addRates: (state, { payload }) => {\n      /*const existingCategoryId = state.addedRates?.map((rate) => {\n        if (rate.category_name === payload.category_name) {\n          return rate.id;\n        }\n        return -1;\n      }); */\n      const existingCategoryId = state.addedRates\n        ?.filter((rate) => rate.category_name === payload.category_name)\n        .map((rate) => rate.id);\n\n      const exist = state.addedRates.some(\n        (rate) =>\n          rate.category_name === payload.category_name &&\n          rate.category_name !== \"social\" &&\n          rate.category_name !== \"messenger\"\n      );\n\n      if (exist) {\n        //state.addedRates.splice(existingCategoryId, 1, payload);\n\n        state.addedRates[\n          state.addedRates.findIndex(\n            (el) =>\n              el.category_name === payload.category_name || el.id === payload.id\n          )\n        ] = payload;\n      }\n\n      if (!exist) {\n        state.addedRates.push(payload);\n      }\n    },\n    updateAddedRates(state, { payload }) {\n      state.addedRates[\n        state.addedRates.findIndex((el) => el.id === payload.id)\n      ] = payload;\n    },\n    removeSelectedCheckbox(state, { payload }) {\n      state.addedRates = state.addedRates.filter((rate) => rate.id !== payload);\n    },\n    calculateTotalPrice: (state) => {\n      const discount = state.addedRates?.some(\n        (rate) => rate.category_name === \"internet\"\n      );\n\n      state.discount = discount;\n\n      if (state.addedRates.length === 0) {\n        state.totalPrice = 0;\n      }\n      if (state.addedRates.length === 1) {\n        state.totalPrice = state.addedRates[0]?.price;\n      }\n\n      if (state.addedRates.length >= 2) {\n        let sum = state.addedRates\n          ?.map((item) => item?.price)\n          .reduce((acc, curr) => acc + curr);\n\n        let discAmount;\n\n        if (discount) {\n          const discAmountCheck = state.addedRates\n            ?.filter((rate) => rate.category_name === \"social\")\n            ?.map((rate) => rate?.price);\n\n          discAmount =\n            discAmountCheck.length >= 2\n              ? discAmountCheck?.reduce((acc, curr) => acc + curr, 0)\n              : discAmountCheck[0];\n\n          const newSumWithDiscount = sum - discAmount;\n          state.discountAmount = discAmount;\n          state.totalPrice = newSumWithDiscount;\n        }\n        state.totalPrice = sum;\n      }\n    },\n  },\n  extraReducers: {\n    [fetchRates.pending]: (state, action) => {\n      state.status = \"loading\";\n      state.error = null;\n    },\n    [fetchRates.fulfilled]: (state, action) => {\n      state.status = \"resolved\";\n      state.ratesList = action.payload;\n    },\n    [fetchRates.rejected]: (state, action) => {\n      state.status = \"rejected\";\n      state.error = action.payload;\n    },\n  },\n});\n\nexport const { addRates, calculateTotalPrice, removeSelectedCheckbox } =\n  ratesSlice.actions;\n\nexport default ratesSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}