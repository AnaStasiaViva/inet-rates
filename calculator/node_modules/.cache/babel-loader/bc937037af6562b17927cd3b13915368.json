{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst initialState = {\n  ratesList: [],\n  addedRates: [],\n  totalPrice: 0,\n  status: null,\n  error: null,\n  discount: false,\n  discountAmount: 0\n};\nexport const fetchRates = createAsyncThunk(\"rates/fetchRates\", async function (_, _ref) {\n  let {\n    rejectWithValue\n  } = _ref;\n\n  try {\n    const response = axios.get(`http://localhost:3008/rates`);\n\n    if (response.ok) {\n      throw new Error(\"Server Error!\");\n    }\n\n    const data = await response;\n    return data.data;\n  } catch (error) {\n    return rejectWithValue(error.message);\n  }\n});\n\nconst getCategoryItemId = (currentState, data) => {\n  return currentState === null || currentState === void 0 ? void 0 : currentState.filter(rate => rate.category_name === data.category_name).map(rate => rate.id);\n};\n\nconst checkIfItemWithSameCatExist = (currentState, data) => {\n  return currentState.some(rate => rate.category_name === data.category_name && rate.category_name !== \"social\" && rate.category_name !== \"messenger\");\n};\n\nconst calculateDiscountAmount = currentState => {\n  var _currentState$filter;\n\n  const discAmountCheck = currentState === null || currentState === void 0 ? void 0 : (_currentState$filter = currentState.filter(rate => rate.category_name === \"social\")) === null || _currentState$filter === void 0 ? void 0 : _currentState$filter.map(rate => rate === null || rate === void 0 ? void 0 : rate.price);\n  return discAmountCheck.length >= 2 ? discAmountCheck === null || discAmountCheck === void 0 ? void 0 : discAmountCheck.reduce((acc, curr) => acc + curr, 0) : discAmountCheck[0];\n};\n\nconst checkIfDiscountApplied = currentState => {\n  return currentState === null || currentState === void 0 ? void 0 : currentState.some(rate => rate.category_name === \"internet\");\n};\n\nexport const ratesSlice = createSlice({\n  name: \"rates\",\n  initialState,\n  reducers: {\n    addRates: (state, _ref2) => {\n      let {\n        payload\n      } = _ref2;\n      //const existingCategoryId = getCategoryItemId(state.addedRates, payload);\n      const exist = checkIfItemWithSameCatExist(state.addedRates, payload);\n\n      if (exist) {\n        state.addedRates[state.addedRates.findIndex(el => el.category_name === payload.category_name || el.id === payload.id)] = payload;\n      }\n\n      if (!exist) {\n        state.addedRates.push(payload);\n      }\n    },\n\n    updateAddedRates(state, _ref3) {\n      let {\n        payload\n      } = _ref3;\n      state.addedRates[state.addedRates.findIndex(el => el.id === payload.id)] = payload;\n    },\n\n    removeSelectedCheckbox(state, _ref4) {\n      let {\n        payload\n      } = _ref4;\n      state.addedRates = state.addedRates.filter(rate => rate.id !== payload);\n    },\n\n    calculateTotalPrice: state => {\n      /*const discount = state.addedRates?.some(\n        (rate) => rate.category_name === \"internet\"\n      ); */\n      const discount = checkIfDiscountApplied(state.addedRates);\n      state.discount = discount;\n\n      if (state.addedRates.length === 0) {\n        state.totalPrice = 0;\n      }\n\n      if (state.addedRates.length === 1) {\n        var _state$addedRates$;\n\n        state.totalPrice = (_state$addedRates$ = state.addedRates[0]) === null || _state$addedRates$ === void 0 ? void 0 : _state$addedRates$.price;\n      }\n\n      if (state.addedRates.length >= 2) {\n        var _state$addedRates;\n\n        let sum = (_state$addedRates = state.addedRates) === null || _state$addedRates === void 0 ? void 0 : _state$addedRates.map(item => item === null || item === void 0 ? void 0 : item.price).reduce((acc, curr) => acc + curr);\n        const discAmount = calculateDiscountAmount(state.addedRates);\n        /* if (discount) {\n          const newSumWithDiscount = sum - discAmount;\n          state.discountAmount = discAmount;\n          state.totalPrice = sum - Number(discAmount);\n        }*/\n\n        if (discount) state.totalPrice = sum - Number(discAmount);\n        state.totalPrice = sum;\n      }\n    }\n  },\n  extraReducers: {\n    [fetchRates.pending]: (state, action) => {\n      state.status = \"loading\";\n      state.error = null;\n    },\n    [fetchRates.fulfilled]: (state, action) => {\n      state.status = \"resolved\";\n      state.ratesList = action.payload;\n    },\n    [fetchRates.rejected]: (state, action) => {\n      state.status = \"rejected\";\n      state.error = action.payload;\n    }\n  }\n});\nexport const {\n  addRates,\n  calculateTotalPrice,\n  removeSelectedCheckbox\n} = ratesSlice.actions;\nexport default ratesSlice.reducer;\n/*const existingCategoryId = state.addedRates?.map((rate) => {\n        if (rate.category_name === payload.category_name) {\n          return rate.id;\n        }\n        return -1;\n      }); */\n//=======\n\n/* const existingCategoryId = state.addedRates\n        ?.filter((rate) => rate.category_name === payload.category_name)\n        .map((rate) => rate.id);\n        \n        const exist = state.addedRates.some(\n        (rate) =>\n          rate.category_name === payload.category_name &&\n          rate.category_name !== \"social\" &&\n          rate.category_name !== \"messenger\"\n      );\n        //state.addedRates.splice(existingCategoryId, 1, payload);\n        */\n\n/*const discAmountCheck = state.addedRates\n            ?.filter((rate) => rate.category_name === \"social\")\n            ?.map((rate) => rate?.price);\n\n          discAmount =\n            discAmountCheck.length >= 2\n              ? discAmountCheck?.reduce((acc, curr) => acc + curr, 0)\n              : discAmountCheck[0]; */","map":{"version":3,"sources":["/Users/anastasiaviva/projects/for-git/rates/calculator/src/store/slices/ratesSlice.js"],"names":["createSlice","createAsyncThunk","axios","initialState","ratesList","addedRates","totalPrice","status","error","discount","discountAmount","fetchRates","_","rejectWithValue","response","get","ok","Error","data","message","getCategoryItemId","currentState","filter","rate","category_name","map","id","checkIfItemWithSameCatExist","some","calculateDiscountAmount","discAmountCheck","price","length","reduce","acc","curr","checkIfDiscountApplied","ratesSlice","name","reducers","addRates","state","payload","exist","findIndex","el","push","updateAddedRates","removeSelectedCheckbox","calculateTotalPrice","sum","item","discAmount","Number","extraReducers","pending","action","fulfilled","rejected","actions","reducer"],"mappings":"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","sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nconst initialState = {\n  ratesList: [],\n  addedRates: [],\n  totalPrice: 0,\n  status: null,\n  error: null,\n  discount: false,\n  discountAmount: 0,\n};\n\nexport const fetchRates = createAsyncThunk(\n  \"rates/fetchRates\",\n  async function (_, { rejectWithValue }) {\n    try {\n      const response = axios.get(`http://localhost:3008/rates`);\n\n      if (response.ok) {\n        throw new Error(\"Server Error!\");\n      }\n\n      const data = await response;\n      return data.data;\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  }\n);\n\nconst getCategoryItemId = (currentState, data) => {\n  return currentState\n    ?.filter((rate) => rate.category_name === data.category_name)\n    .map((rate) => rate.id);\n};\n\nconst checkIfItemWithSameCatExist = (currentState, data) => {\n  return currentState.some(\n    (rate) =>\n      rate.category_name === data.category_name &&\n      rate.category_name !== \"social\" &&\n      rate.category_name !== \"messenger\"\n  );\n};\n\nconst calculateDiscountAmount = (currentState) => {\n  const discAmountCheck = currentState\n    ?.filter((rate) => rate.category_name === \"social\")\n    ?.map((rate) => rate?.price);\n\n  return discAmountCheck.length >= 2\n    ? discAmountCheck?.reduce((acc, curr) => acc + curr, 0)\n    : discAmountCheck[0];\n};\n\nconst checkIfDiscountApplied = (currentState) => {\n  return currentState?.some((rate) => rate.category_name === \"internet\");\n};\n\nexport const ratesSlice = createSlice({\n  name: \"rates\",\n  initialState,\n  reducers: {\n    addRates: (state, { payload }) => {\n      //const existingCategoryId = getCategoryItemId(state.addedRates, payload);\n      const exist = checkIfItemWithSameCatExist(state.addedRates, payload);\n\n      if (exist) {\n        state.addedRates[\n          state.addedRates.findIndex(\n            (el) =>\n              el.category_name === payload.category_name || el.id === payload.id\n          )\n        ] = payload;\n      }\n\n      if (!exist) {\n        state.addedRates.push(payload);\n      }\n    },\n    updateAddedRates(state, { payload }) {\n      state.addedRates[\n        state.addedRates.findIndex((el) => el.id === payload.id)\n      ] = payload;\n    },\n    removeSelectedCheckbox(state, { payload }) {\n      state.addedRates = state.addedRates.filter((rate) => rate.id !== payload);\n    },\n    calculateTotalPrice: (state) => {\n      /*const discount = state.addedRates?.some(\n        (rate) => rate.category_name === \"internet\"\n      ); */\n\n      const discount = checkIfDiscountApplied(state.addedRates);\n      state.discount = discount;\n\n      if (state.addedRates.length === 0) {\n        state.totalPrice = 0;\n      }\n      if (state.addedRates.length === 1) {\n        state.totalPrice = state.addedRates[0]?.price;\n      }\n\n      if (state.addedRates.length >= 2) {\n        let sum = state.addedRates\n          ?.map((item) => item?.price)\n          .reduce((acc, curr) => acc + curr);\n\n        const discAmount = calculateDiscountAmount(state.addedRates);\n\n        /* if (discount) {\n          const newSumWithDiscount = sum - discAmount;\n          state.discountAmount = discAmount;\n          state.totalPrice = sum - Number(discAmount);\n        }*/\n\n        if (discount) state.totalPrice = sum - Number(discAmount);\n        state.totalPrice = sum;\n      }\n    },\n  },\n  extraReducers: {\n    [fetchRates.pending]: (state, action) => {\n      state.status = \"loading\";\n      state.error = null;\n    },\n    [fetchRates.fulfilled]: (state, action) => {\n      state.status = \"resolved\";\n      state.ratesList = action.payload;\n    },\n    [fetchRates.rejected]: (state, action) => {\n      state.status = \"rejected\";\n      state.error = action.payload;\n    },\n  },\n});\n\nexport const { addRates, calculateTotalPrice, removeSelectedCheckbox } =\n  ratesSlice.actions;\n\nexport default ratesSlice.reducer;\n\n/*const existingCategoryId = state.addedRates?.map((rate) => {\n        if (rate.category_name === payload.category_name) {\n          return rate.id;\n        }\n        return -1;\n      }); */\n\n//=======\n\n/* const existingCategoryId = state.addedRates\n        ?.filter((rate) => rate.category_name === payload.category_name)\n        .map((rate) => rate.id);\n        \n        const exist = state.addedRates.some(\n        (rate) =>\n          rate.category_name === payload.category_name &&\n          rate.category_name !== \"social\" &&\n          rate.category_name !== \"messenger\"\n      );\n        //state.addedRates.splice(existingCategoryId, 1, payload);\n        */\n\n/*const discAmountCheck = state.addedRates\n            ?.filter((rate) => rate.category_name === \"social\")\n            ?.map((rate) => rate?.price);\n\n          discAmount =\n            discAmountCheck.length >= 2\n              ? discAmountCheck?.reduce((acc, curr) => acc + curr, 0)\n              : discAmountCheck[0]; */\n"]},"metadata":{},"sourceType":"module"}